name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  setup:
    name: Setup Node.js and MongoDB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci  # Usa 'ci' para garantir instala√ß√£o limpa

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup  # Depende do job de configura√ß√£o para rodar

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci  # Garante que todas as depend√™ncias est√£o instaladas

      - name: Run tests
        run: npm test  # Corrigido para rodar os testes corretamente

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test  # S√≥ roda deploy se os testes passarem
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Apenas na branch main

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Build project (caso necess√°rio)
        run: npm run build || echo "Nenhuma etapa de build necess√°ria"

      - name: Start application
        env:
          PORT: 3001  # Define a porta para evitar conflitos
        run: npm start &  # Executa o servidor em background

      - name: Deploy application
        run: echo "üöÄ Deploy realizado com sucesso na branch main!"  # Aqui entraria o comando real de deploy
